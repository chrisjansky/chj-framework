$color-attributes: (
  (
    name: border,
    property: border-color
  ), (
    name: background,
    property: background-color
  ), (
    name: color,
    property: color
  )
);

@each $attribute in $color-attributes {

  $attribute-name: map-get($attribute, "name");
  $attribute-property: map-get($attribute, "property");
  
  /* Attribute: #{$attribute-name} */

  $color-groups: map-get($json, "colors");

  @each $color-group in $color-groups {
    $index: index($color-groups, $color-group);
    $color-name: map-get($color-group, "name");
    $color-shades: map-get($color-group, "shades");

    /* Color group: #{$color-name} */

    @each $color-shade in $color-shades {
      $shade-name: map-get($color-shade, "name");
      $shade-value: map-get($color-shade, "value");

      .#{$attribute-name}-#{$index}--#{$shade-name} {
        @if ($shade-value == "transparent") {
          visibility: hidden;
        } @else {
          #{$attribute-property}: $shade-value;
        }
      }

    }
  }

  $greys: map-get($json, "greys");

  /* Greys */
  @each $grey in $greys {
    $grey--name: map-get($grey, "name");
    $grey--value: map-get($grey, "value");

    .#{$attribute-name}-grey--#{$grey--name} {
      #{$attribute-property}: $grey--value;
    }
  }

}
